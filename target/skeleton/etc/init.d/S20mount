#!/bin/sh

MTD=/dev/$(grep \"data\" /proc/mtd | cut -d : -f 1)

persist_start() {
  # Attach the UBI volume
  if [ ! -c /dev/ubi0 ]; then
    /usr/sbin/ubiattach -p $MTD -d 0 || exit 1

    # Wait up to 10 seconds for the attach to complete
    for i in `seq 1 10`; do
      if [ -c /dev/ubi0 ]; then
          break;
      fi
      /bin/sleep 1
    done

    # Bail if the node was never created
    [ -c /dev/ubi0 ] || exit 1
  fi

  # Create the persist volume if it does not exist
  if ! /usr/sbin/ubinfo -d 0 -N persist 1> /dev/null 2>&1 ; then
    /usr/sbin/ubimkvol /dev/ubi0 -N persist -s 32MiB || exit 1
  fi
  # Create the data volume if it does not exist
  if ! /usr/sbin/ubinfo -d 0 -N data 1> /dev/null 2>&1 ; then
    /usr/sbin/ubimkvol /dev/ubi0 -N data -m || exit 1
  fi

  # Mount the persist volume
  if ! grep /mnt/persist /proc/mounts 1> /dev/null ; then
    /bin/echo "Mounting ubi0:persist on /mnt/persist"
    /bin/mount -o noatime -t ubifs ubi0:persist /mnt/persist || exit 1
    /bin/chmod 2775 /mnt/persist
    /bin/chgrp config /mnt/persist
  fi

  # Mount the data volume
  if ! grep /mnt/data /proc/mounts 1> /dev/null ; then
    # If there is an SD card connected, check it first
    mount_ext() {
      for DEV in /dev/mmcblk* /dev/sd*; do
        if [ -b $DEV ] && blkid $DEV | grep ext_store > /dev/null ; then
          /bin/echo "Mounting $DEV on /mnt/data"
          /bin/mount -o noatime $DEV /mnt/data && return 0
        fi
      done
      return 1
    }
    if ! mount_ext ; then
      /bin/echo "Mounting ubi0:data on /mnt/data"
      /bin/mount -o noatime -t ubifs ubi0:data /mnt/data
    fi
    /bin/chmod 2775 /mnt/data
    /bin/chgrp data /mnt/data
  fi
}

persist_stop() {
  if grep /mnt/data /proc/mounts 1> /dev/null ; then
    /bin/echo "Unmounting /mnt/data"
    /bin/umount -f /mnt/data
  fi
  if grep /mnt/persist /proc/mounts 1> /dev/null ; then
    /bin/echo "Unmounting /mnt/persist"
    /bin/umount -f /mnt/persist
  fi

  if [ -c /dev/ubi0 ]; then
    /usr/sbin/ubidetach -p $MTD
  fi
}

case "$1" in
  start)
    persist_start
    ;;
  stop)
    persist_stop
    ;;
  restart|reload)
    ;;
  *)
    echo -n "usage: $0 {start|stop|restart|reload}"
    ;;
esac
